AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: transcribe-poc-asr-input-output

Parameters:
  InputBucketName:
    Type: String
    Default: 'transcribe-poc-asr-input-output'
    
Globals:
  Function:
    Timeout: 10

Resources:
  InputS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref InputBucketName

  ResultsDDBtable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
      - AttributeName: partitionKey
        AttributeType: S
      KeySchema:
      - AttributeName: partitionKey
        KeyType: HASH
      BillingMode: PAY_PER_REQUEST

  ElasticsearchDomain: 
    Type: AWS::Elasticsearch::Domain
    Properties:
      DomainName: "voice-analytics"
      ElasticsearchClusterConfig: 
        InstanceCount: "2"
      EBSOptions: 
        EBSEnabled: true
        Iops: 0
        VolumeSize: 20
        VolumeType: "gp2"
      AccessPolicies: 
        Version: "2012-10-17"
        Statement: 
          - 
            Sid: "AllowESHTTPFullAccessToEveryone"
            Effect: "Allow"
            Principal: 
              AWS: "*"
            Action: "es:ESHttp*"
            Resource:
              !Sub |-
                arn:aws:es:${AWS::Region}:${AWS::AccountId}:domain/voice-analytics/*
      ElasticsearchVersion: "5.5"
      
  SentimentFunction:
    Type: AWS::Serverless::Function
    DependsOn:
      - ElasticsearchDomain
      - ResultsDDBtable
    Properties:
      CodeUri: sentimentFunction/
      Handler: app.handler
      Runtime: nodejs12.x
      MemorySize: 128
      Environment:
        Variables:
          DDBtable: !Ref ResultsDDBtable
          es_host:
            Fn::GetAtt: 
              - ElasticsearchDomain
              - DomainEndpoint
          es_region: "${AWS::Region}"
      Policies:
        - ElasticsearchHttpPostPolicy:
            DomainName: !Ref ElasticsearchDomain
        - DynamoDBCrudPolicy:
            TableName: !Ref ResultsDDBtable        
        - S3ReadPolicy:
            BucketName: !Ref InputBucketName
        - Statement:
          - Sid: comprehendDetectSentimentPolicy
            Effect: Allow
            Action:
            - comprehend:DetectSentiment
            - comprehend:DetectKeyPhrases
            - comprehend:DetectEntities
            Resource: '*'            
      Events:
        FileUpload:
          Type: S3
          Properties:
            Bucket: !Ref InputS3Bucket
            Events: s3:ObjectCreated:*
            Filter: 
              S3Key:
                Rules:
                  - Name: suffix
                    Value: '.json'              

  TranscribeFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: transcribeFunction/
      Handler: app.handler
      Runtime: nodejs12.x
      MemorySize: 128
      Policies:
        - S3CrudPolicy:
            BucketName: !Ref InputBucketName
        - Statement:
          - Effect: Allow
            Resource: '*'
            Action:
              - transcribe:StartTranscriptionJob
              - cloudwatch:GetMetricStatistics
              - cloudwatch:ListMetrics
      Events:
        FileUpload:
          Type: S3
          Properties:
            Bucket: !Ref InputS3Bucket
            Events: s3:ObjectCreated:*
            Filter: 
              S3Key:
                Rules:
                  - Name: suffix
                    Value: '.mp3'            
Outputs: 
  S3BucketName:
    Description: Transcriber S3 bucket
    Value: !Ref InputS3Bucket
  ElasticsearchUrl:
    Description: "Elasticsearch Domain Endpoint that you can use to access the CloudTrail logs and analyze them"
    Value: !GetAtt ElasticsearchDomain.DomainEndpoint
